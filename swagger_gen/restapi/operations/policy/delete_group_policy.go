// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteGroupPolicyHandlerFunc turns a function with the right signature into a delete group policy handler
type DeleteGroupPolicyHandlerFunc func(DeleteGroupPolicyParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteGroupPolicyHandlerFunc) Handle(params DeleteGroupPolicyParams) middleware.Responder {
	return fn(params)
}

// DeleteGroupPolicyHandler interface for that can handle valid delete group policy params
type DeleteGroupPolicyHandler interface {
	Handle(DeleteGroupPolicyParams) middleware.Responder
}

// NewDeleteGroupPolicy creates a new http.Handler for the delete group policy operation
func NewDeleteGroupPolicy(ctx *middleware.Context, handler DeleteGroupPolicyHandler) *DeleteGroupPolicy {
	return &DeleteGroupPolicy{Context: ctx, Handler: handler}
}

/* DeleteGroupPolicy swagger:route DELETE /group policy grouping deleteGroupPolicy

DeleteGroupPolicy delete group policy API

*/
type DeleteGroupPolicy struct {
	Context *middleware.Context
	Handler DeleteGroupPolicyHandler
}

func (o *DeleteGroupPolicy) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteGroupPolicyParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
